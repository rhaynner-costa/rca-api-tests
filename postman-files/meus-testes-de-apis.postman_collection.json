{
	"info": {
		"_postman_id": "57182f8f-b0e1-4621-8e4c-269db2085b49",
		"name": "meus-testes-de-apis",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32095774"
	},
	"item": [
		{
			"name": "retorna-um-unico-registro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test('Retornou o satus code 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"// Verifica se o número de registros é igual a 4 (userId, id, title, body)",
							"pm.test(\"A resposta contém exatamente 4 registros\", function () {",
							"    var keysArray = Object.keys(response);",
							"    pm.expect(keysArray).to.have.lengthOf(4);",
							"});",
							"",
							"pm.test('Testa se todos elementos retornaram na response', function () {",
							"    pm.expect(response, 'Erro:  Elemento \\'userId\\' nao retornou na response').to.have.property('userId');",
							"    pm.expect(response, 'Erro:  Elemento \\'id\\' nao retornou na response').to.have.property('id');",
							"    pm.expect(response, 'Erro:  Elemento \\'title\\' nao retornou na response').to.have.property('title');",
							"    pm.expect(response, 'Erro:  Elemento \\'body\\' nao retornou na response').to.have.property('body');",
							"})",
							"",
							"pm.test('Testa se todos elementos retornaram valores validos', function () {",
							"    pm.expect(response.userId, 'Erro:  Elemento \\'userId\\' nao retornou um valor valido').is.not.null;",
							"    pm.expect(response.id, 'Erro:  Elemento \\'id\\' nao retornou um valor valido').is.not.null;",
							"    pm.expect(response.title, 'Erro:  Elemento \\'title\\' nao retornou um valor valido').is.not.null;",
							"    pm.expect(response.title, 'Erro:  Elemento \\'title\\' nao retornou uma string').to.be.a('string');",
							"    pm.expect(response.body, 'Erro:  Elemento \\'body\\' nao retornou um valor valido').is.not.null;",
							"    pm.expect(response.body, 'Erro:  Elemento \\'body\\' nao retornou uma string').to.be.a('string');",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "valida-se-alistagem-retornou",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test('Deve retornar o satus code 200', function () {",
							"    pm.response.to.have.status(200);",
							"",
							"})",
							"",
							"pm.test(\"A resposta contém exatamente 100 registros\", function () {",
							"    pm.expect(response, 'Erro : O response nao retornou a quantidade esperadas de itens').to.have.lengthOf(100);",
							"",
							"});",
							"",
							"pm.test(\"A resposta é um array\", function () {",
							"    pm.expect(response, 'Erro : O response nao retornou um array').to.be.an('array');",
							"    ",
							"});",
							"",
							"pm.test(\"Verifica se retornou as propriedades em todos os objetos do array\", function () {",
							"",
							"    response.forEach(function (obj) {",
							"",
							"        pm.expect(obj, 'Erro : Nao retornou a propriedade \\'userId\\'').to.have.property('userId');",
							"        pm.expect(obj.userId).to.not.be.null;",
							"        pm.expect(obj.userId).to.not.be.undefined;",
							"",
							"        pm.expect(obj, 'Erro : Nao retornou a propriedade \\'id\\'').to.have.property('id');",
							"        pm.expect(obj.id).to.not.be.null;",
							"        pm.expect(obj.id).to.not.be.undefined;",
							"",
							"        pm.expect(obj, 'Erro : Nao retornou a propriedade \\'title\\'').to.have.property('title');",
							"        pm.expect(obj.title).to.not.be.null;",
							"        pm.expect(obj.title).to.not.be.undefined;",
							"",
							"        pm.expect(obj, 'Erro : Nao retornou a propriedade \\'body\\'').to.have.property('body');",
							"        pm.expect(obj.body).to.not.be.null;",
							"        pm.expect(obj.body).to.not.be.undefined;",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		}
	]
}